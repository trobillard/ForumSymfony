{% extends 'base.html.twig' %}

{% block title %}Symfony Forum!{% endblock %}

{% block body %}

    <h1>6 Good reason to use Symfony</h1>
<div id="rules">

    <ul>
        <li>1. Reputation</li>
        <p>Quickly adopted by professionals active in this field following its launch in 2005, Symfony today is a stable environment that is both well-known and recognized internationally. The number of its references attests to this, as they have grown significantly since its launch. Symfony is also an active community; developers, integrators, users and other contributors who participate in the on-going enrichment of this tool.</p>
        <li>2. Permanence</li>
        <p> Symfony was originally created by the interactive agency SensioLabs. Designed by professionals for professionals, Symfony is first and foremost a pragmatic tool, the features of which address real-world-requirements.
            Permanence is also something that relates to long-term support. Professional Symfony support is provided by SensioLabs, but there is also an entire ecosystem that has grown up around Symfony since its launch: the community (Slack, Stack Overflow, etc.) and the many other service companies that have invested in the framework.
            Lastly, it is also with a view towards sustainable development that Symfony is distributed under Open Source MIT license, which does not impose constraints and allows the development of Open Source as well as proprietary applications.</p>
        <li>3. References</li>
        <p>Intranets, major general public sites, social networks, community sites, management and workflow applications, etc. Examples are not lacking: Hundreds of sites and applications of all sizes and of all types trust Symfony.
            This is specifically the case of Yahoo!, Dailymotion, Opensky.com, Exercise.com and even applications such as phpBB and Drupal.</p>
        <li>4. Innovation</li>
        <p>Symfony is everything that you would come to expect from a framework: speed, flexibility, reusable components, etc. Then there is the structure of what has been developed and the use of best practices. Not bad!
            But that is not all! Since SensioLabs has developed a habit of shaking up the established order and is always striving for excellence, Symfony (and its entire community) has developed a sense of curiosity that goes well beyond PHP. And we do not hesitate to innovate by seeking out ideas elsewhere and then adapt them to the world of PHP, such as dependency injection from the Java world.
            In addition, Symfony, seeking out ongoing improvement in the productivity of developers, envisioned the “web debug toolbar,” taken from other frameworks, whether PHP or otherwise.</p>
        <li>5. Resources</li>
        <p>When using Symfony, you are assured of never “being alone with your screen.” Whether a question of community support (mailings lists, IRC, etc.) or company support (consulting, training, etc.), you will always find the answers to your questions.
            Starting from the principle that “an undocumented line is a line that does not exist,” you will also find many works dedicated to Symfony, which will help you throughout the development of your sites and applications.</p>
        <li>6. Interoperability</li>
        <p>The idea behind Symfony: Don’t lock yourself up within Symfony! Allow yourself to build applications that precisely meets your needs!
            Symfony respects the existing “de facto standards” of PHP: PHPUnit, naming conventions for classes, etc. Furthermore, Symfony also allows you to use certain pieces of its software building blocks (dependency injector, translations management, forms management, etc.) without necessarily using the framework in its entirety.
            By the way, Symfony is so interoperable that, at the core, it uses external software building blocks itself (ORM Doctrine, Swiftmailer, etc.)!</p>
    </ul>
</div>
{% endblock %}
